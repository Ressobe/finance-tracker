/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/account/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AccountOverviewDto"];
                        "application/json": components["schemas"]["AccountOverviewDto"];
                        "text/json": components["schemas"]["AccountOverviewDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateAccountDto"];
                    "application/json": components["schemas"]["UpdateAccountDto"];
                    "text/json": components["schemas"]["UpdateAccountDto"];
                    "application/*+json": components["schemas"]["UpdateAccountDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/{accountId}/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransactionDto"][];
                        "application/json": components["schemas"]["TransactionDto"][];
                        "text/json": components["schemas"]["TransactionDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateAccountDto"];
                    "application/json": components["schemas"]["CreateAccountDto"];
                    "text/json": components["schemas"]["CreateAccountDto"];
                    "application/*+json": components["schemas"]["CreateAccountDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AccountDto"];
                        "application/json": components["schemas"]["AccountDto"];
                        "text/json": components["schemas"]["AccountDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/budget/{budgetId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    budgetId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BudgetDto"];
                        "application/json": components["schemas"]["BudgetDto"];
                        "text/json": components["schemas"]["BudgetDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    budgetId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateBudgetDto"];
                    "application/json": components["schemas"]["UpdateBudgetDto"];
                    "text/json": components["schemas"]["UpdateBudgetDto"];
                    "application/*+json": components["schemas"]["UpdateBudgetDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BudgetDto"];
                        "application/json": components["schemas"]["BudgetDto"];
                        "text/json": components["schemas"]["BudgetDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    budgetId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/budget/{categoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateBudgetDto"];
                    "application/json": components["schemas"]["CreateBudgetDto"];
                    "text/json": components["schemas"]["CreateBudgetDto"];
                    "application/*+json": components["schemas"]["CreateBudgetDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["BudgetDto"];
                        "application/json": components["schemas"]["BudgetDto"];
                        "text/json": components["schemas"]["BudgetDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/category/{categoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryDto"];
                        "application/json": components["schemas"]["CategoryDto"];
                        "text/json": components["schemas"]["CategoryDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateCategoryDto"];
                    "application/json": components["schemas"]["UpdateCategoryDto"];
                    "text/json": components["schemas"]["UpdateCategoryDto"];
                    "application/*+json": components["schemas"]["UpdateCategoryDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryDto"];
                        "application/json": components["schemas"]["CategoryDto"];
                        "text/json": components["schemas"]["CategoryDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateCategoryDto"];
                    "application/json": components["schemas"]["CreateCategoryDto"];
                    "text/json": components["schemas"]["CreateCategoryDto"];
                    "application/*+json": components["schemas"]["CreateCategoryDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recurring-transaction/{recurringTransactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    recurringTransactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["RecurringTransactionDto"];
                        "application/json": components["schemas"]["RecurringTransactionDto"];
                        "text/json": components["schemas"]["RecurringTransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    recurringTransactionId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateRecurringTransactionDto"];
                    "application/json": components["schemas"]["UpdateRecurringTransactionDto"];
                    "text/json": components["schemas"]["UpdateRecurringTransactionDto"];
                    "application/*+json": components["schemas"]["UpdateRecurringTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["RecurringTransactionDto"];
                        "application/json": components["schemas"]["RecurringTransactionDto"];
                        "text/json": components["schemas"]["RecurringTransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    recurringTransactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/recurring-transaction/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateRecurringTransactionDto"];
                    "application/json": components["schemas"]["CreateRecurringTransactionDto"];
                    "text/json": components["schemas"]["CreateRecurringTransactionDto"];
                    "application/*+json": components["schemas"]["CreateRecurringTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/saving-goal/{savingGoalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingGoalId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SavingGoalDto"];
                        "application/json": components["schemas"]["SavingGoalDto"];
                        "text/json": components["schemas"]["SavingGoalDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingGoalId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateSavingGoalDto"];
                    "application/json": components["schemas"]["UpdateSavingGoalDto"];
                    "text/json": components["schemas"]["UpdateSavingGoalDto"];
                    "application/*+json": components["schemas"]["UpdateSavingGoalDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SavingGoalDto"];
                        "application/json": components["schemas"]["SavingGoalDto"];
                        "text/json": components["schemas"]["SavingGoalDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingGoalId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/saving-goal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateSavingGoalDto"];
                    "application/json": components["schemas"]["CreateSavingGoalDto"];
                    "text/json": components["schemas"]["CreateSavingGoalDto"];
                    "application/*+json": components["schemas"]["CreateSavingGoalDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/saving-transaction/{savingTransactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingTransactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SavingTransactionDto"];
                        "application/json": components["schemas"]["SavingTransactionDto"];
                        "text/json": components["schemas"]["SavingTransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingTransactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/saving-transaction/{savingGoalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingGoalId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateSavingTransactionDto"];
                    "application/json": components["schemas"]["UpdateSavingTransactionDto"];
                    "text/json": components["schemas"]["UpdateSavingTransactionDto"];
                    "application/*+json": components["schemas"]["UpdateSavingTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SavingTransactionDto"];
                        "application/json": components["schemas"]["SavingTransactionDto"];
                        "text/json": components["schemas"]["SavingTransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    savingGoalId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateSavingTransactionDto"];
                    "application/json": components["schemas"]["CreateSavingTransactionDto"];
                    "text/json": components["schemas"]["CreateSavingTransactionDto"];
                    "application/*+json": components["schemas"]["CreateSavingTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/transaction/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    transactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransactionDto"];
                        "application/json": components["schemas"]["TransactionDto"];
                        "text/json": components["schemas"]["TransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    transactionId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["UpdateTransactionDto"];
                    "application/json": components["schemas"]["UpdateTransactionDto"];
                    "text/json": components["schemas"]["UpdateTransactionDto"];
                    "application/*+json": components["schemas"]["UpdateTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransactionDto"];
                        "application/json": components["schemas"]["TransactionDto"];
                        "text/json": components["schemas"]["TransactionDto"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProblemDetails"];
                        "application/json": components["schemas"]["ProblemDetails"];
                        "text/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    transactionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/transaction/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    accountId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["CreateTransactionDto"];
                    "application/json": components["schemas"]["CreateTransactionDto"];
                    "text/json": components["schemas"]["CreateTransactionDto"];
                    "application/*+json": components["schemas"]["CreateTransactionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["LoginDto"];
                    "application/json": components["schemas"]["LoginDto"];
                    "text/json": components["schemas"]["LoginDto"];
                    "application/*+json": components["schemas"]["LoginDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NewUserDto"];
                        "application/json": components["schemas"]["NewUserDto"];
                        "text/json": components["schemas"]["NewUserDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json-patch+json": components["schemas"]["RegisterDto"];
                    "application/json": components["schemas"]["RegisterDto"];
                    "text/json": components["schemas"]["RegisterDto"];
                    "application/*+json": components["schemas"]["RegisterDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["AccountDto"][];
                        "application/json": components["schemas"]["AccountDto"][];
                        "text/json": components["schemas"]["AccountDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryDto"][];
                        "application/json": components["schemas"]["CategoryDto"][];
                        "text/json": components["schemas"]["CategoryDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/saving-goals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["SavingGoalDto"][];
                        "application/json": components["schemas"]["SavingGoalDto"][];
                        "text/json": components["schemas"]["SavingGoalDto"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/overview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["OverviewDto"];
                        "application/json": components["schemas"]["OverviewDto"];
                        "text/json": components["schemas"]["OverviewDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AccountDto: {
            /** Format: int32 */
            id: number;
            name: string;
            /** Format: int64 */
            currentBalance: number;
            userId: string;
            /** Format: date-time */
            createdAt: string;
        };
        AccountOverviewDto: {
            /** Format: int32 */
            id: number;
            name: string;
            /** Format: int64 */
            currentBalance: number;
            /** Format: int64 */
            income: number;
            /** Format: int64 */
            expense: number;
            /** Format: date-time */
            createdAt: string;
        };
        BudgetDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            categoryId: number;
            /** Format: int32 */
            limitAmount: number;
            frequency: components["schemas"]["Frequency"];
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
            /** Format: date-time */
            createdAt: string;
        };
        CategoryDto: {
            /** Format: int32 */
            id: number;
            userId: string;
            name: string;
        };
        CreateAccountDto: {
            name: string;
            /** Format: int64 */
            currentBalance: number;
        };
        CreateBudgetDto: {
            /** Format: int32 */
            limitAmount?: number;
            frequency?: components["schemas"]["Frequency"];
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
        };
        CreateCategoryDto: {
            name?: string | null;
        };
        CreateRecurringTransactionDto: {
            /** Format: int32 */
            categoryId?: number;
            /** Format: int32 */
            amount?: number;
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
            description?: string | null;
            /** Format: date-time */
            lastOccurrence?: string;
            /** Format: date-time */
            nextOccurrence?: string;
            isActive?: boolean;
        };
        CreateSavingGoalDto: {
            name: string;
            /** Format: int32 */
            targetAmount: number;
        };
        CreateSavingTransactionDto: {
            /** Format: int32 */
            amount?: number;
            /** Format: date-time */
            date?: string;
        };
        CreateTransactionDto: {
            /** Format: int32 */
            amount: number;
            transactionType: components["schemas"]["TransactionType"];
            /** Format: int32 */
            categoryId: number;
            description?: string | null;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        Frequency: 0 | 1 | 2;
        LoginDto: {
            /** Format: email */
            email: string;
            password: string;
        };
        NewUserDto: {
            userName?: string | null;
            email?: string | null;
            token?: string | null;
        };
        OverviewDto: {
            /** Format: int32 */
            totalBalance: number;
            /** Format: int32 */
            totalIncome: number;
            /** Format: int32 */
            totalExpense: number;
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
        } & {
            [key: string]: unknown;
        };
        RecurringTransactionDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            accountId: number;
            /** Format: int32 */
            categoryId: number;
            /** Format: int32 */
            amount: number;
            /** Format: date-time */
            startDate: string;
            /** Format: date-time */
            endDate: string;
            description: string;
            /** Format: date-time */
            lastOccurrence: string;
            /** Format: date-time */
            nextOccurrence: string;
            isActive: boolean;
        };
        RegisterDto: {
            username: string;
            /** Format: email */
            email: string;
            password: string;
        };
        SavingGoalDto: {
            /** Format: int32 */
            id: number;
            name: string;
            userId: string;
            /** Format: int32 */
            targetAmount: number;
            /** Format: int32 */
            currentSaved: number;
            /** Format: date-time */
            createdAt: string;
        };
        SavingTransactionDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            savingGoalId: number;
            /** Format: int32 */
            amount: number;
            /** Format: date-time */
            date: string;
            /** Format: date-time */
            createdAt: string;
        };
        TransactionDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            accountId: number;
            /** Format: int32 */
            amount: number;
            transactionType: components["schemas"]["TransactionType"];
            /** Format: int32 */
            categoryId: number;
            description: string;
            /** Format: date-time */
            createdAt: string;
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        TransactionType: 0 | 1;
        UpdateAccountDto: {
            name?: string | null;
            /** Format: int64 */
            currentBalance?: number;
        };
        UpdateBudgetDto: {
            /** Format: int32 */
            categoryId?: number;
            /** Format: int32 */
            limitAmount?: number;
            frequency?: components["schemas"]["Frequency"];
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
        };
        UpdateCategoryDto: {
            name?: string | null;
        };
        UpdateRecurringTransactionDto: {
            /** Format: int32 */
            accountId?: number;
            /** Format: int32 */
            categoryId?: number;
            /** Format: int32 */
            amount?: number;
            /** Format: date-time */
            startDate?: string;
            /** Format: date-time */
            endDate?: string;
            description?: string | null;
            /** Format: date-time */
            lastOccurrence?: string;
            /** Format: date-time */
            nextOccurrence?: string;
            isActive?: boolean;
        };
        UpdateSavingGoalDto: {
            name?: string | null;
            /** Format: int32 */
            targetAmount?: number;
        };
        UpdateSavingTransactionDto: {
            /** Format: int32 */
            amount?: number;
            /** Format: int32 */
            savingGoalId?: number;
            /** Format: date-time */
            date?: string;
        };
        UpdateTransactionDto: {
            /** Format: int32 */
            amount?: number;
            transactionType?: components["schemas"]["TransactionType"];
            /** Format: int32 */
            accountId?: number;
            /** Format: int32 */
            categoryId?: number;
            description?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
